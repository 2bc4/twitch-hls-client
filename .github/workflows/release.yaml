# Based on https://github.com/AlyoshaVasilieva/luminous-ttv/blob/main/.github/workflows/release.yaml

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths:
      - '**.rs'
      - 'Cargo**'

name: Release

jobs:
  check:
    name: Check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'ubuntu-latest', 'windows-latest' ]
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3
      - name: setup
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo check

  lint:
    name: Lint
    needs: check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'ubuntu-latest', 'windows-latest' ]
        cargo-cmd:
          - fmt --all -- --check
          - clippy --all
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo ${{ matrix['cargo-cmd'] }}

  release:
    name: Release
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            target-cpu: x86-64
            os: windows-latest
            features: default
            bin-name: twitch-hls-client.exe
            zip-name: x86_64-pc-windows-msvc

          - target: x86_64-pc-windows-msvc
            target-cpu: x86-64-v3
            os: windows-latest
            features: default
            bin-name: twitch-hls-client.exe
            zip-name: x86_64-v3-pc-windows-msvc

          - target: i686-pc-windows-msvc
            target-cpu: i686
            os: windows-latest
            features: default
            bin-name: twitch-hls-client.exe
            zip-name: i686-pc-windows-msvc

          - target: x86_64-pc-windows-msvc
            target-cpu: x86-64
            os: windows-latest
            features: http2
            bin-name: twitch-hls-client.exe
            zip-name: http2-x86_64-pc-windows-msvc

          - target: x86_64-pc-windows-msvc
            target-cpu: x86-64-v3
            os: windows-latest
            features: http2
            bin-name: twitch-hls-client.exe
            zip-name: http2-x86_64-v3-pc-windows-msvc

          - target: i686-pc-windows-msvc
            target-cpu: i686
            os: windows-latest
            features: http2
            bin-name: twitch-hls-client.exe
            zip-name: http2-i686-pc-windows-msvc

          - target: x86_64-unknown-linux-musl
            target-cpu: x86-64
            os: ubuntu-latest
            features: http2
            bin-name: twitch-hls-client
            zip-name: x86_64-unknown-linux-musl

          - target: x86_64-unknown-linux-musl
            target-cpu: x86-64-v3
            os: ubuntu-latest
            features: http2
            bin-name: twitch-hls-client
            zip-name: x86_64-v3-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3
      - name: Install Linux dependencies
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: sudo apt-get install -y musl-tools musl-dev
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
          components: rust-src
      - name: Build
        shell: bash
        run: RUSTFLAGS='-Ctarget-cpu=${{ matrix.target-cpu }}' cargo +nightly build -Z build-std=std,panic_abort -Z build-std-features= --release --target=${{ matrix.target }} --features ${{ matrix.features }}
      - name: Smoke Test
        shell: bash
        run: RUSTFLAGS='-Ctarget-cpu=${{ matrix.target-cpu }}' cargo +nightly run -Z build-std=std,panic_abort -Z build-std-features= --release --target=${{ matrix.target }} --features ${{ matrix.features }} -- -V
      - name: Move Binary
        id: mv
        run: mv "target/${{ matrix.target }}/release/${{ matrix.bin-name }}" .
      - name: Zip Files
        uses: vimtor/action-zip@v1.1
        id: archive
        with:
          files: README.md LICENSE ${{ matrix.bin-name }}
          dest: twitch-hls-client-${{ matrix.zip-name }}.zip
      - name: Upload Archive
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          updateOnlyUnreleased: true
          artifactErrorsFailBuild: true
          artifacts: twitch-hls-client-${{ matrix.zip-name }}.zip
          artifactContentType: application/zip
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
